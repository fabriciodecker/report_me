version: '3.8'

services:
  # Backend Django (produção)
  api:
    build: 
      context: ./reportme_api
      dockerfile: Dockerfile.prod
    container_name: reportme_api_prod
    ports:
      - "8000:8000"
    environment:
      - DEBUG=False
      - SECRET_KEY=${SECRET_KEY}
      - ALLOWED_HOSTS=${ALLOWED_HOSTS}
      - DB_ENGINE=django.db.backends.postgresql
      - DB_NAME=reportme
      - DB_USER=reportme
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_HOST=db
      - DB_PORT=5432
    depends_on:
      - db
    networks:
      - reportme_network
    restart: unless-stopped

  # Frontend React (produção)
  frontend:
    build:
      context: ./reportme_front
      dockerfile: Dockerfile.prod
    container_name: reportme_frontend_prod
    ports:
      - "80:80"
    environment:
      - REACT_APP_API_URL=${REACT_APP_API_URL}
    depends_on:
      - api
    networks:
      - reportme_network
    restart: unless-stopped

  # Banco de dados PostgreSQL
  db:
    image: postgres:15-alpine
    container_name: reportme_db_prod
    environment:
      POSTGRES_DB: reportme
      POSTGRES_USER: reportme
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - reportme_network
    restart: unless-stopped

  # Nginx (proxy reverso)
  nginx:
    image: nginx:alpine
    container_name: reportme_nginx
    ports:
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./ssl:/etc/ssl/certs
    depends_on:
      - api
      - frontend
    networks:
      - reportme_network
    restart: unless-stopped

networks:
  reportme_network:
    driver: bridge

volumes:
  postgres_data:
